name: DeepSpeech

on:
  push:
    branches:
      - feature/deepspeech
#      - master

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout DeepSpeech
        uses: actions/checkout@v2
        with:
         repository: GommeAntiLegit/DeepSpeech-Java-Bindings
         path: DeepSpeech-Java-Bindings

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

#        wget https://github.com/mozilla/DeepSpeech/archive/v0.7.1.tar.gz
#        https://github.com/mozilla/DeepSpeech/releases/download/v0.7.1/native_client.amd64.cpu.linux.tar.xz
#        https://github.com/mozilla/DeepSpeech/releases/download/v0.7.1/native_client.amd64.cuda.win.tar.xz
      - name: Download libdeepspeech
#        working-directory: DeepSpeech-Java-Bindings/DeepSpeech-jni
        run: |
          mkdir deepspeech && cd $_
          wget -q https://github.com/mozilla/DeepSpeech/releases/download/v0.7.1/native_client.amd64.cpu.linux.tar.xz
          tar -xf native_client.amd64.cpu.linux.tar.xz && rm native_client.amd64.cpu.linux.tar.xz
          mkdir -p ../DeepSpeech-Java-Bindings/libs/linux && mv libdeepspeech.so $_/libdeepspeech_cpu.so
          ls -al ../DeepSpeech-Java-Bindings/libs/linux

      - name: Build libdeepspeech-java.jar
        working-directory: DeepSpeech-Java-Bindings/libdeepspeech
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sed -i "2i\
              id 'maven-publish'\
          " build.gradle
          tee -a build.gradle << END

          publishing {
            repositories {
              maven {
                name "GitHubPackages"
                url "https://maven.pkg.github.com/" + System.getenv("GITHUB_REPOSITORY")
                credentials {
                  username System.getenv("GITHUB_ACTOR")
                  password System.getenv("GITHUB_TOKEN")
                }
              }
            }
          }
          END
          gradle publish -x test

      - name: Build libdeepspeech-jni
        working-directory: DeepSpeech-Java-Bindings/DeepSpeech-jni
        run: |
          sed -i "s/set(CUDA_CONFIGURATION .*)/set(CUDA_CONFIGURATION FALSE)/" CMakeLists.txt
          sed -i "s/set(PLATFORM .*)/set(PLATFORM linux)/" CMakeLists.txt
          cmake build .
          ls -al
          ls -al libs/linux
          ls -al ../../
          make
          ls -al
          ls -al cmake-build-release

#set(CUDA_CONFIGURATION FALSE)
